public Action:Client_Pause(client, args) 
{
	if (GetClientTeam(client) == 1) return Plugin_Handled;
	
	PauseMethod(client);	
	if (g_bPause[client]==false)
		PrintToChat(client, "%t", "Pause2",MOSSGREEN, WHITE, RED, WHITE);
	else
		PrintToChat(client, "%t", "Pause3",MOSSGREEN, WHITE);
	return Plugin_Handled;
}

public PauseMethod(client)
{
	new Float: fDiff = GetEngineTime() - g_fLastUndo[client];
	if (GetClientTeam(client) == 1 || fDiff < 1.0) return;
	if (g_bPause[client]==false && IsValidEntity(client))
	{
		if (g_bPauseServerside==false && client != g_ProBot && client != g_TpBot) 
		{
			PrintToChat(client, "%t", "Pause1",MOSSGREEN, WHITE,RED,WHITE);
			return;
		}
		g_fLastTimeDoubleDucked[client] -= 500.0;
		g_bPause[client]=true;		
		decl Float:fVel[3];
		fVel[0] = 0.000000;
		fVel[1] = 0.000000;
		fVel[2] = 0.000000;
		SetEntPropVector(client, Prop_Data, "m_vecVelocity", fVel);
		SetEntityMoveType(client, MOVETYPE_NONE);
		//Timer enabled?
		if(g_bTimeractivated[client] == true)
		{
			g_fStartPauseTime[client] = GetEngineTime();
			if (g_fPauseTime[client] > 0.0)
				g_fStartPauseTime[client] = g_fStartPauseTime[client] - g_fPauseTime[client];	
		}
		SetEntData(client, FindSendPropOffs("CBaseEntity", "m_CollisionGroup"), 2, 4, true);
	}
	else
	{
		if(g_fStartTime[client] != -1.0 && g_bTimeractivated[client] == true)
		{
			g_fPauseTime[client] = GetEngineTime() - g_fStartPauseTime[client];
		}
		g_bNoClip[client]=false;
		g_bPause[client]=false;
		if (!g_bRoundEnd)
			SetEntityMoveType(client, MOVETYPE_WALK);
		SetEntData(client, FindSendPropOffs("CBaseEntity", "m_CollisionGroup"), 2, 4, true);
		TeleportEntity(client, NULL_VECTOR,NULL_VECTOR, Float:{0.0,0.0,-100.0});
	}
}